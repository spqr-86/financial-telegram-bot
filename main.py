# –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô main.py - –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞
# –ü—Ä–æ–±–ª–µ–º–∞: –∫–æ–Ω—Ñ–ª–∏–∫—Ç event loop –≤ production —Å—Ä–µ–¥–µ
# –†–µ—à–µ–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –≤–º–µ—Å—Ç–æ asyncio.run()

import os
import logging
from datetime import datetime
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class FinancialTelegramBot:
    """–ü—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    
    def __init__(self):
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.bot_token = os.getenv("BOT_TOKEN")
        
        if not self.bot_token:
            raise ValueError("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
        self.application = None
        logger.info("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        
        welcome_message = """
ü§ñ **–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç v2.0**

–Ø –ø–æ–º–æ–≥—É —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã!

**–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:**
üí∏ "–ü–æ—Ç—Ä–∞—Ç–∏–ª 300 —Ä—É–±–ª–µ–π –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"
üí∞ "–ü–æ–ª—É—á–∏–ª –∑–∞—Ä–ø–ª–∞—Ç—É 50000"  
üìä "–ö–∞–∫–æ–π —É –º–µ–Ω—è –±–∞–ª–∞–Ω—Å?"

**–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**
/help - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
/balance - –±—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å
/status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

–ü–∏—à–∏—Ç–µ –æ–±—ã—á–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏! üòä
        """
        
        await update.message.reply_text(welcome_message, parse_mode='Markdown')
        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        
        help_message = """
üÜò **–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞:**

**–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π:**
‚Ä¢ "–ü–æ—Ç—Ä–∞—Ç–∏–ª 500 –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"
‚Ä¢ "–ü–æ–ª—É—á–∏–ª –∑–∞—Ä–ø–ª–∞—Ç—É 45000" 
‚Ä¢ "–ó–∞–ø–ª–∞—Ç–∏–ª 2000 –∑–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç"
‚Ä¢ "–ö—É–ø–∏–ª –∫–æ—Ñ–µ –∑–∞ 150"

**–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:**
‚Ä¢ "–ö–∞–∫–æ–π –±–∞–ª–∞–Ω—Å?"
‚Ä¢ "–ü–æ–∫–∞–∂–∏ –æ—Ç—á–µ—Ç"
‚Ä¢ "–°–∫–æ–ª—å–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª?"

**–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/balance - –±—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å
/status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

**–°—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:**
üü° –ë–∞–∑–æ–≤—ã–π –±–æ—Ç: —Ä–∞–±–æ—Ç–∞–µ—Ç
üîÑ AI –∞–≥–µ–Ω—Ç: –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è
üîÑ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è

–ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—á—å! üß†
        """
        
        await update.message.reply_text(help_message, parse_mode='Markdown')
    
    async def balance_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ë—ã—Å—Ç—Ä–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞"""
        
        response = """üí∞ **–ë—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å:**

–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: 0.00 RUB
üíö –î–æ—Ö–æ–¥—ã: 0.00 RUB
‚ù§Ô∏è –†–∞—Å—Ö–æ–¥—ã: 0.00 RUB
üìä –û–ø–µ—Ä–∞—Ü–∏–π: 0

_üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AI –∞–≥–µ–Ω—Ç–æ–º –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..._

–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à–∞ —Ä–µ–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞!"""
        
        await update.message.reply_text(response, parse_mode='Markdown')
        logger.info(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –±–∞–ª–∞–Ω—Å")
    
    async def status_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        bot_status = "üü¢ –†–∞–±–æ—Ç–∞–µ—Ç"
        db_status = "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è"
        ai_status = "üîÑ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        openai_key = "üü¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω" if os.getenv("OPENAI_API_KEY") else "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        db_url = "üü¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞" if os.getenv("DATABASE_URL") else "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        
        status_message = f"""
‚öôÔ∏è **–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:**

**–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:**
ü§ñ Telegram Bot: {bot_status}
üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_status}
üß† AI –ê–≥–µ–Ω—Ç: {ai_status}

**–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:**
üîë OpenAI API: {openai_key}
üóÑÔ∏è Database URL: {db_url}

**–í–µ—Ä—Å–∏—è:** v2.0 Production
**–°–µ—Ä–≤–µ—Ä:** Railway.app
**–í—Ä–µ–º—è:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} UTC

_–°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AI –∞–≥–µ–Ω—Ç–∞_
        """
        
        await update.message.reply_text(status_message, parse_mode='Markdown')
        logger.info(f"‚öôÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç—É—Å")
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        
        user_text = update.message.text
        chat_id = update.effective_chat.id
        user_name = update.effective_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name} ({chat_id}): {user_text}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
        await context.bot.send_chat_action(chat_id=chat_id, action="typing")
        
        # –ë–∞–∑–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–∫–∞ –±–µ–∑ AI –∞–≥–µ–Ω—Ç–∞)
        user_text_lower = user_text.lower()
        
        if any(word in user_text_lower for word in ["–±–∞–ª–∞–Ω—Å", "—Å–∫–æ–ª—å–∫–æ", "–¥–µ–Ω–µ–≥"]):
            response = """üí∞ **–í–∞—à –±–∞–ª–∞–Ω—Å:**

–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: 0.00 RUB
üìä –û–ø–µ—Ä–∞—Ü–∏–π: 0

_üîÑ –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AI –∞–≥–µ–Ω—Ç–æ–º –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —É—á–µ—Ç–∞!_

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /balance –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞."""
            
        elif any(word in user_text_lower for word in ["–ø–æ—Ç—Ä–∞—Ç–∏–ª", "–∑–∞–ø–ª–∞—Ç–∏–ª", "–∫—É–ø–∏–ª", "—Ç—Ä–∞—Ç–∞"]):
            response = """‚úÖ **–†–∞—Å—Ö–æ–¥ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω**

üìù –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "{}"

_üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AI –∞–≥–µ–Ω—Ç–æ–º –ø–æ–∑–≤–æ–ª–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ–∫–∞—Ç—å:_
‚Ä¢ –°—É–º–º—É
‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—é
‚Ä¢ –î–∞—Ç—É
‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

–ê –ø–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!""".format(user_text)
            
        elif any(word in user_text_lower for word in ["–ø–æ–ª—É—á–∏–ª", "–∑–∞—Ä–ø–ª–∞—Ç–∞", "–¥–æ—Ö–æ–¥", "–∑–∞—Ä–∞–±–æ—Ç–∞–ª"]):
            response = """‚úÖ **–î–æ—Ö–æ–¥ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω**

üìù –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "{}"

_üîÑ AI –∞–≥–µ–Ω—Ç —Å–∫–æ—Ä–æ —Å–º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å:_
‚Ä¢ –°—É–º–º—É –¥–æ—Ö–æ–¥–∞
‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫ (–∑–∞—Ä–ø–ª–∞—Ç–∞, —Ñ—Ä–∏–ª–∞–Ω—Å, etc)
‚Ä¢ –î–∞—Ç—É –ø–æ–ª—É—á–µ–Ω–∏—è

–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!""".format(user_text)
            
        elif any(word in user_text_lower for word in ["–æ—Ç—á–µ—Ç", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞"]):
            response = """üìä **–û—Ç—á–µ—Ç –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω**

_üîÑ –í —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç:_
‚Ä¢ –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
‚Ä¢ –î–∏–Ω–∞–º–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤
‚Ä¢ –ì—Ä–∞—Ñ–∏–∫–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º—ã
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑—ã

–ê –ø–æ–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã."""
            
        else:
            response = f"""ü§ñ **–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!**

–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: _"{user_text}"_

**–ß—Ç–æ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ (/start, /help, /balance)
‚úÖ –î–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ

**–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:**
üîÑ AI –æ–±—Ä–∞–±–æ—Ç–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ—á–∏
üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏!"""
        
        await update.message.reply_text(response, parse_mode='Markdown')
        logger.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_name}")
    
    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞: {context.error}")
        
        if update and update.message:
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "‚Ä¢ /start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å\n"
                "‚Ä¢ /status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É\n"
                "‚Ä¢ /help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É"
            )
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        
        # –ö–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("balance", self.balance_command))
        self.application.add_handler(CommandHandler("status", self.status_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(
            MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        self.application.add_error_handler(self.error_handler)
    
    def run(self):
        """–°–ò–ù–•–†–û–ù–ù–´–ô –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω"""
        
        logger.info("üîß –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram...")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.application = Application.builder().token(self.bot_token).build()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.setup_handlers()
        
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)...")
        
        # –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
        self.application.run_polling(
            drop_pending_updates=True,  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        )

def main():
    """–°–ò–ù–•–†–û–ù–ù–ê–Ø –≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω"""
    
    print("ü§ñ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ Telegram –±–æ—Ç–∞ (Production v2.0)...")
    
    try:
        bot = FinancialTelegramBot()
        
        # –í–ê–ñ–ù–û: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º asyncio.run() –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
        bot.run()
        
    except ValueError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    # –°–ò–ù–•–†–û–ù–ù–´–ô –∑–∞–ø—É—Å–∫ –±–µ–∑ asyncio.run()
    main()
