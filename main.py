import os
import asyncio
import logging
from datetime import datetime
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class FinancialTelegramBot:
    """–ü—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    
    def __init__(self):
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.bot_token = os.getenv("BOT_TOKEN")
        
        if not self.bot_token:
            raise ValueError("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
        self.application = None
        logger.info("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        
        welcome_message = """
ü§ñ **–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω!**

–Ø –ø–æ–º–æ–≥—É —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã.

**–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:**
üí∏ "–ü–æ—Ç—Ä–∞—Ç–∏–ª 300 —Ä—É–±–ª–µ–π –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"
üí∞ "–ü–æ–ª—É—á–∏–ª –∑–∞—Ä–ø–ª–∞—Ç—É 50000"  
üìä "–ö–∞–∫–æ–π —É –º–µ–Ω—è –±–∞–ª–∞–Ω—Å?"

**–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**
/help - —Å–ø—Ä–∞–≤–∫–∞
/balance - –±—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ

–ü–∏—à–∏—Ç–µ –æ–±—ã—á–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏! üòä
        """
        
        await update.message.reply_text(welcome_message, parse_mode='Markdown')
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        
        help_message = """
üÜò **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:**

**–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π:**
‚Ä¢ "–ü–æ—Ç—Ä–∞—Ç–∏–ª 500 –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"
‚Ä¢ "–ü–æ–ª—É—á–∏–ª –∑–∞—Ä–ø–ª–∞—Ç—É 45000" 
‚Ä¢ "–ó–∞–ø–ª–∞—Ç–∏–ª 2000 –∑–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç"

**–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:**
‚Ä¢ "–ö–∞–∫–æ–π –±–∞–ª–∞–Ω—Å?"
‚Ä¢ "–ü–æ–∫–∞–∂–∏ –æ—Ç—á–µ—Ç"
‚Ä¢ "–°–∫–æ–ª—å–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª?"

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/balance - –±—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ

–ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—á—å! üß†
        """
        
        await update.message.reply_text(help_message, parse_mode='Markdown')
    
    async def balance_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ë—ã—Å—Ç—Ä–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞"""
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∞—à–∏–º –∞–≥–µ–Ω—Ç–æ–º
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        
        response = "üí∞ **–ë—ã—Å—Ç—Ä—ã–π –±–∞–ª–∞–Ω—Å:**\n\n–ë–∞–ª–∞–Ω—Å: 0.00 RUB\nüìù –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: 0\n\n_–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..._"
        await update.message.reply_text(response, parse_mode='Markdown')
    
    async def clear_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—á–∏—Å—Ç–∫–∞ —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
        
        await update.message.reply_text("üóëÔ∏è **–î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã**\n\n_–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..._", parse_mode='Markdown')
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        
        user_text = update.message.text
        chat_id = update.effective_chat.id
        user_name = update.effective_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name} ({chat_id}): {user_text}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
        await context.bot.send_chat_action(chat_id=chat_id, action="typing")
        
        # –ó–î–ï–°–¨ –ë–£–î–ï–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° –í–ê–®–ò–ú LANGRAPH –ê–ì–ï–ù–¢–û–ú
        # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        
        if "–±–∞–ª–∞–Ω—Å" in user_text.lower():
            response = "üí∞ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: 0.00 RUB\n\n_–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞_"
        elif "–ø–æ—Ç—Ä–∞—Ç–∏–ª" in user_text.lower() or "–∑–∞–ø–ª–∞—Ç–∏–ª" in user_text.lower():
            response = "‚úÖ –†–∞—Å—Ö–æ–¥ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω\n\n_–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..._"
        elif "–ø–æ–ª—É—á–∏–ª" in user_text.lower():
            response = "‚úÖ –î–æ—Ö–æ–¥ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω\n\n_–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..._"
        else:
            response = f"ü§ñ –ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: \"{user_text}\"\n\n_–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AI –∞–≥–µ–Ω—Ç–æ–º –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ_"
        
        await update.message.reply_text(response, parse_mode='Markdown')
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_name}")
    
    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        
        logger.error(f"–û—à–∏–±–∫–∞ –±–æ—Ç–∞: {context.error}")
        
        if update and update.message:
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        
        # –ö–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("balance", self.balance_command))
        self.application.add_handler(CommandHandler("clear", self.clear_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(
            MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        self.application.add_error_handler(self.error_handler)
    
    async def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling"""
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.application = Application.builder().token(self.bot_token).build()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.setup_handlers()
        
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        await self.application.run_polling(
            drop_pending_updates=True,  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            close_loop=False
        )

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    
    try:
        bot = FinancialTelegramBot()
        await bot.run()
    except ValueError as e:
        logger.error(e)
        print("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:", e)
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", e)

if __name__ == "__main__":
    print("ü§ñ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ Telegram –±–æ—Ç–∞...")
    asyncio.run(main())
